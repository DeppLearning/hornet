FROM golang:1.20-bullseye AS build

# Ensure ca-certficates are up to date
RUN update-ca-certificates

# Set the current Working Directory inside the container
RUN mkdir /app
WORKDIR /app

# Use Go Modules
COPY go.mod .
COPY go.sum .

RUN go mod download
RUN go mod verify

# Copy everything from the current directory to the PWD(Present Working Directory) inside the container
COPY . .

# Build the binary
RUN GOOS=linux GOARCH=amd64 go build -tags="pow_avx" \
      -ldflags='-w -s' -a \
      -o /go/bin/hornet

############################
# Image
############################
# https://github.com/GoogleContainerTools/distroless/blob/master/base/README.md
# using distroless base image, contains: glibc, libssl and openssl
FROM gcr.io/distroless/base@sha256:73deaaf6a207c1a33850257ba74e0f196bc418636cada9943a03d7abea980d6d

EXPOSE 8081/tcp
EXPOSE 14265/tcp
EXPOSE 15600/tcp
EXPOSE 14626/udp

# Copy assets into distroless image
COPY --from=build /go/bin/hornet /app/hornet
COPY ./config.json /app/config.json
COPY ./peering.json /app/peering.json
COPY ./profiles.json /app/profiles.json
COPY ./mqtt_config.json /app/mqtt_config.json

ENTRYPOINT ["/app/hornet"]
