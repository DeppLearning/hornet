# Documentation at http://goreleaser.com

# Project name
project_name: HORNET-legacy

# Builds
builds:
  # Linux AMD64
  - id: hornet-legacy-linux-amd64
    binary: hornet-legacy
    ldflags:
      - -s -w -X github.com/iotaledger/hornet/plugins/cli.AppVersion={{.Version}}
    main: main.go
    goos:
      - linux
    goarch:
      - amd64
  # Linux ARM64
  - id: hornet-legacy-linux-arm64
    binary: hornet-legacy
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    ldflags:
      - -s -w -X github.com/iotaledger/hornet/plugins/cli.AppVersion={{.Version}}
    main: main.go
    goos:
      - linux
    goarch:
      - arm64

# Archives
archives:
  - format: tar.gz
    wrap_in_directory: true
    name_template: >- 
      {{ .ProjectName }}-{{ .Version }}_
      {{- if eq .Os "darwin" }}macOS_
      {{- else if eq .Os "linux" }}Linux_
      {{- else if eq .Os "windows" }}Windows_
      {{- else }}{{ .Os }}_{{ end }}
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "arm64" }}ARM64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - README.md
      - LICENSE
      - config.json
      - peering.json
      - profiles.json
      - mqtt_config.json

# DEB packages
nfpms:
  - id: nfpm
    package_name: hornet-legacy
    file_name_template: >- 
      {{ tolower .ProjectName }}_{{ replace .Version "v" "" }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "arm64" }}ARM64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    vendor: GoReleaser
    license: Apache 2.0
    maintainer: iotaledger
    homepage: https://github.com/iotaledger/hornet
    description: HORNET is a powerful IOTA fullnode software. This is the legacy version.
    formats:
      - deb
    bindir: /usr/bin
    contents:
      - src: "nfpm/shared_files/hornet-legacy.service"
        dst: "/lib/systemd/system/hornet-legacy.service"

      - src: "config.json"
        dst: "/var/lib/hornet-legacy/config.json"
        type: config

      - src: "peering.json"
        dst: "/var/lib/hornet-legacy/peering.json"
        type: config

      - src: "profiles.json"
        dst: "/var/lib/hornet-legacy/profiles.json"
        type: config

      - src: "mqtt_config.json"
        dst: "/var/lib/hornet-legacy/mqtt_config.json"
        type: config

      - src: "nfpm/shared_files/hornet-legacy.env"
        dst: "/etc/default/hornet-legacy"
        type: config

    dependencies:
      - systemd
      - wget
      - bash
    scripts:
      preremove: "nfpm/deb_files/prerm"
      postremove: "nfpm/deb_files/postrm"
      preinstall: "nfpm/deb_files/preinst"
      postinstall: "nfpm/deb_files/postinst"

# Checksum
checksum:
  name_template: "checksums.txt"

# Snapshot
snapshot:
  name_template: "{{ .Tag }}"

# Changelog
changelog:
  skip: true

# Release
release:
  prerelease: auto
  name_template: "{{.ProjectName}}-{{.Version}}"
  github:
    owner: iotaledger
    name: hornet
